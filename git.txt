git이란
파일의 버전을 관리할 수 있는 시스템, 프로그램을 지칭한다.
svn 등 여러 버전 관리(형상관리) 프로그램이 있지만, 현재는 사실상 git이 대부분을 차지하고 있다.

git을 이용해서 로컬에서만 버전을 관리할 수도 있지만,
github라는 온라인 서비스를 이용해서 클라우드 상에 올려서 공유하거나 백업하는 용도로도 사용할 수 있다.

백업의 목적으로 깃을 먼저 배워보자.

깃의 시작은 저장소를 만드는 것이다.

git init
파일이 있는지 여부 무관하게, 해당 폴더를 저장소로 만들고자 할 때 사용하는 명령어이다.
git init을 사용하면 .git이라는 숨김폴더가 생성된다.
해당 폴더에는 파일 변경 이력, 기록이 저장된다.

현재 저장소의 변경사항을 확정할 때, 진행자의 정보를 입력해주어야 한다.
이를 "사용자 설정"이라 부르며, 모든 위치에서 설정을 공유하는 방법과 해당 저장소에만 적용하는 방법이 있다.
git config [--local|--global] user.name "유저명"
위 명령어에서 --local 혹은 --global 중 하나를 선택해서 설정할 수 있으며, --local은 해당 저장소에만 적용이다.
user.name은 변경사항을 확정한 주체가 누구인지를 나타내는 닉네임이다.

git config --local user.email "myemail@mail.com"

user.email도 설정해주어야 하며, 만약 해당 이메일이 깃허브에 등록되어있다면, 깃허브에서 확인했을 때 프로필이 적용되어 나타난다.

설정 후, 저장소의 상태를 확인해보자.
git status
위 명령어는 가장 자주 사용하게 될 명령어이다.

버전을 확정 짓기 전에 어떤 파일의 변경사항을 버전에 추가할지 정해주어야 한다.
이를 staging이라고 하며, staging 된 파일 변경 사항을 버전으로 확정 짓는 것을 commit이라고 한다.

commit을 하려면 먼저 staging이 이루어져야 한다.













